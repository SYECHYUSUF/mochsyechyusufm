[{"data":1,"prerenderedAt":600},["ShallowReactive",2],{"/en/articles/subset-sum-problem":3},{"id":4,"title":5,"body":6,"date":575,"description":576,"extension":577,"head":578,"image":586,"meta":587,"navigation":37,"ogImage":588,"path":590,"readingTime":575,"robots":575,"schemaOrg":591,"seo":592,"sitemap":593,"stem":597,"tags":598,"__hash__":599},"articles_en/en/articles/subset-sum-problem.md","Masalah Subset Sum",{"type":7,"value":8,"toc":567},"minimal",[9,14,496,501,505,509,514,532,536,548,552,563],[10,11,13],"h1",{"id":12},"subset-sum-problem","SUBSET SUM PROBLEM",[15,16,21],"pre",{"className":17,"code":18,"language":19,"meta":20,"style":20},"language-markdown shiki shiki-themes github-dark github-dark github-light","# Masalah Subset Sum: Apakah Ada Subset yang Jumlahnya Sama dengan Target?\n\nMasalah **Subset Sum** adalah salah satu masalah klasik dalam **ilmu komputer dan teori algoritma**, khususnya dalam kategori **NP-Complete Problem**. Tujuan dari masalah ini adalah untuk menentukan apakah terdapat **subset dari suatu himpunan bilangan bulat** yang **jumlah elemennya sama dengan nilai target tertentu**.\n\n---\n\n## Contoh Masalah\n\n**Input**:\n- Himpunan: `{3, 34, 4, 12, 5, 2}`\n- Target: `9`\n\n**Pertanyaan**:\nApakah ada subset dari elemen-elemen di atas yang jika dijumlahkan menghasilkan `9`?\n\n**Jawaban**:\n✅ Ya, subset `{4, 5}` menghasilkan jumlah `9`.\n\n---\n\n## Aplikasi Nyata\n\nMasalah ini muncul dalam berbagai konteks praktis:\n\n- 💳 **Pemilihan kombinasi item** agar sesuai dengan kapasitas maksimum (misalnya dalam masalah knapsack).\n- 💵 **Pengalokasian sumber daya** untuk mencapai target anggaran.\n- 🧩 **Permainan dan puzzle logika**.\n- 🔐 **Kriptografi**, terutama dalam konstruk algoritma knapsack cryptosystem.\n\n---\n\n## Pendekatan Penyelesaian\n\n### 1. **Rekursi Brute-Force**\nCoba semua kemungkinan subset. Kompleksitas waktu: `O(2^n)`.\n\n### 2. **Memoization / Top-down Dynamic Programming**\nGunakan cache untuk menyimpan hasil submasalah. Kompleksitas waktu: `O(n * target)`.\n\n### 3. **Tabulasi / Bottom-up DP**\nGunakan tabel boolean `dp[i][j]` yang menyatakan apakah mungkin mendapatkan jumlah `j` dari elemen `0...i`.\n\n---\n\n## Implementasi C++: Dynamic Programming\n\n```cpp\n#include \u003Ciostream>\n#include \u003Cvector>\n\nbool isSubsetSum(const std::vector\u003Cint>& nums, int target) {\n    int n = nums.size();\n    std::vector\u003Cstd::vector\u003Cbool>> dp(n + 1, std::vector\u003Cbool>(target + 1, false));\n\n    // Inisialisasi: target 0 bisa dicapai tanpa memilih elemen\n    for (int i = 0; i \u003C= n; i++) dp[i][0] = true;\n\n    // Mengisi tabel DP\n    for (int i = 1; i \u003C= n; i++) {\n        for (int sum = 1; sum \u003C= target; sum++) {\n            if (nums[i - 1] \u003C= sum) {\n                dp[i][sum] = dp[i - 1][sum] || dp[i - 1][sum - nums[i - 1]];\n            } else {\n                dp[i][sum] = dp[i - 1][sum];\n            }\n        }\n    }\n\n    return dp[n][target];\n}\n\nint main() {\n    std::vector\u003Cint> set = {3, 34, 4, 12, 5, 2};\n    int target = 9;\n\n    if (isSubsetSum(set, target)) {\n        std::cout \u003C\u003C \"Ada subset dengan jumlah sama dengan target.\\n\";\n    } else {\n        std::cout \u003C\u003C \"Tidak ada subset yang cocok.\\n\";\n    }\n\n    return 0;\n}\n","markdown","",[22,23,24,32,39,45,50,56,61,67,72,78,84,90,95,101,107,112,118,124,129,134,139,145,150,156,161,167,173,179,185,190,195,200,206,211,217,223,228,234,240,245,251,257,262,267,272,278,283,289,295,301,306,312,318,324,329,335,341,346,352,358,364,370,376,382,388,394,400,406,411,417,423,428,434,440,446,451,457,463,469,475,480,485,491],"code",{"__ignoreMap":20},[25,26,29],"span",{"class":27,"line":28},"line",1,[25,30,31],{},"# Masalah Subset Sum: Apakah Ada Subset yang Jumlahnya Sama dengan Target?\n",[25,33,35],{"class":27,"line":34},2,[25,36,38],{"emptyLinePlaceholder":37},true,"\n",[25,40,42],{"class":27,"line":41},3,[25,43,44],{},"Masalah **Subset Sum** adalah salah satu masalah klasik dalam **ilmu komputer dan teori algoritma**, khususnya dalam kategori **NP-Complete Problem**. Tujuan dari masalah ini adalah untuk menentukan apakah terdapat **subset dari suatu himpunan bilangan bulat** yang **jumlah elemennya sama dengan nilai target tertentu**.\n",[25,46,48],{"class":27,"line":47},4,[25,49,38],{"emptyLinePlaceholder":37},[25,51,53],{"class":27,"line":52},5,[25,54,55],{},"---\n",[25,57,59],{"class":27,"line":58},6,[25,60,38],{"emptyLinePlaceholder":37},[25,62,64],{"class":27,"line":63},7,[25,65,66],{},"## Contoh Masalah\n",[25,68,70],{"class":27,"line":69},8,[25,71,38],{"emptyLinePlaceholder":37},[25,73,75],{"class":27,"line":74},9,[25,76,77],{},"**Input**:\n",[25,79,81],{"class":27,"line":80},10,[25,82,83],{},"- Himpunan: `{3, 34, 4, 12, 5, 2}`\n",[25,85,87],{"class":27,"line":86},11,[25,88,89],{},"- Target: `9`\n",[25,91,93],{"class":27,"line":92},12,[25,94,38],{"emptyLinePlaceholder":37},[25,96,98],{"class":27,"line":97},13,[25,99,100],{},"**Pertanyaan**:\n",[25,102,104],{"class":27,"line":103},14,[25,105,106],{},"Apakah ada subset dari elemen-elemen di atas yang jika dijumlahkan menghasilkan `9`?\n",[25,108,110],{"class":27,"line":109},15,[25,111,38],{"emptyLinePlaceholder":37},[25,113,115],{"class":27,"line":114},16,[25,116,117],{},"**Jawaban**:\n",[25,119,121],{"class":27,"line":120},17,[25,122,123],{},"✅ Ya, subset `{4, 5}` menghasilkan jumlah `9`.\n",[25,125,127],{"class":27,"line":126},18,[25,128,38],{"emptyLinePlaceholder":37},[25,130,132],{"class":27,"line":131},19,[25,133,55],{},[25,135,137],{"class":27,"line":136},20,[25,138,38],{"emptyLinePlaceholder":37},[25,140,142],{"class":27,"line":141},21,[25,143,144],{},"## Aplikasi Nyata\n",[25,146,148],{"class":27,"line":147},22,[25,149,38],{"emptyLinePlaceholder":37},[25,151,153],{"class":27,"line":152},23,[25,154,155],{},"Masalah ini muncul dalam berbagai konteks praktis:\n",[25,157,159],{"class":27,"line":158},24,[25,160,38],{"emptyLinePlaceholder":37},[25,162,164],{"class":27,"line":163},25,[25,165,166],{},"- 💳 **Pemilihan kombinasi item** agar sesuai dengan kapasitas maksimum (misalnya dalam masalah knapsack).\n",[25,168,170],{"class":27,"line":169},26,[25,171,172],{},"- 💵 **Pengalokasian sumber daya** untuk mencapai target anggaran.\n",[25,174,176],{"class":27,"line":175},27,[25,177,178],{},"- 🧩 **Permainan dan puzzle logika**.\n",[25,180,182],{"class":27,"line":181},28,[25,183,184],{},"- 🔐 **Kriptografi**, terutama dalam konstruk algoritma knapsack cryptosystem.\n",[25,186,188],{"class":27,"line":187},29,[25,189,38],{"emptyLinePlaceholder":37},[25,191,193],{"class":27,"line":192},30,[25,194,55],{},[25,196,198],{"class":27,"line":197},31,[25,199,38],{"emptyLinePlaceholder":37},[25,201,203],{"class":27,"line":202},32,[25,204,205],{},"## Pendekatan Penyelesaian\n",[25,207,209],{"class":27,"line":208},33,[25,210,38],{"emptyLinePlaceholder":37},[25,212,214],{"class":27,"line":213},34,[25,215,216],{},"### 1. **Rekursi Brute-Force**\n",[25,218,220],{"class":27,"line":219},35,[25,221,222],{},"Coba semua kemungkinan subset. Kompleksitas waktu: `O(2^n)`.\n",[25,224,226],{"class":27,"line":225},36,[25,227,38],{"emptyLinePlaceholder":37},[25,229,231],{"class":27,"line":230},37,[25,232,233],{},"### 2. **Memoization / Top-down Dynamic Programming**\n",[25,235,237],{"class":27,"line":236},38,[25,238,239],{},"Gunakan cache untuk menyimpan hasil submasalah. Kompleksitas waktu: `O(n * target)`.\n",[25,241,243],{"class":27,"line":242},39,[25,244,38],{"emptyLinePlaceholder":37},[25,246,248],{"class":27,"line":247},40,[25,249,250],{},"### 3. **Tabulasi / Bottom-up DP**\n",[25,252,254],{"class":27,"line":253},41,[25,255,256],{},"Gunakan tabel boolean `dp[i][j]` yang menyatakan apakah mungkin mendapatkan jumlah `j` dari elemen `0...i`.\n",[25,258,260],{"class":27,"line":259},42,[25,261,38],{"emptyLinePlaceholder":37},[25,263,265],{"class":27,"line":264},43,[25,266,55],{},[25,268,270],{"class":27,"line":269},44,[25,271,38],{"emptyLinePlaceholder":37},[25,273,275],{"class":27,"line":274},45,[25,276,277],{},"## Implementasi C++: Dynamic Programming\n",[25,279,281],{"class":27,"line":280},46,[25,282,38],{"emptyLinePlaceholder":37},[25,284,286],{"class":27,"line":285},47,[25,287,288],{},"```cpp\n",[25,290,292],{"class":27,"line":291},48,[25,293,294],{},"#include \u003Ciostream>\n",[25,296,298],{"class":27,"line":297},49,[25,299,300],{},"#include \u003Cvector>\n",[25,302,304],{"class":27,"line":303},50,[25,305,38],{"emptyLinePlaceholder":37},[25,307,309],{"class":27,"line":308},51,[25,310,311],{},"bool isSubsetSum(const std::vector\u003Cint>& nums, int target) {\n",[25,313,315],{"class":27,"line":314},52,[25,316,317],{},"    int n = nums.size();\n",[25,319,321],{"class":27,"line":320},53,[25,322,323],{},"    std::vector\u003Cstd::vector\u003Cbool>> dp(n + 1, std::vector\u003Cbool>(target + 1, false));\n",[25,325,327],{"class":27,"line":326},54,[25,328,38],{"emptyLinePlaceholder":37},[25,330,332],{"class":27,"line":331},55,[25,333,334],{},"    // Inisialisasi: target 0 bisa dicapai tanpa memilih elemen\n",[25,336,338],{"class":27,"line":337},56,[25,339,340],{},"    for (int i = 0; i \u003C= n; i++) dp[i][0] = true;\n",[25,342,344],{"class":27,"line":343},57,[25,345,38],{"emptyLinePlaceholder":37},[25,347,349],{"class":27,"line":348},58,[25,350,351],{},"    // Mengisi tabel DP\n",[25,353,355],{"class":27,"line":354},59,[25,356,357],{},"    for (int i = 1; i \u003C= n; i++) {\n",[25,359,361],{"class":27,"line":360},60,[25,362,363],{},"        for (int sum = 1; sum \u003C= target; sum++) {\n",[25,365,367],{"class":27,"line":366},61,[25,368,369],{},"            if (nums[i - 1] \u003C= sum) {\n",[25,371,373],{"class":27,"line":372},62,[25,374,375],{},"                dp[i][sum] = dp[i - 1][sum] || dp[i - 1][sum - nums[i - 1]];\n",[25,377,379],{"class":27,"line":378},63,[25,380,381],{},"            } else {\n",[25,383,385],{"class":27,"line":384},64,[25,386,387],{},"                dp[i][sum] = dp[i - 1][sum];\n",[25,389,391],{"class":27,"line":390},65,[25,392,393],{},"            }\n",[25,395,397],{"class":27,"line":396},66,[25,398,399],{},"        }\n",[25,401,403],{"class":27,"line":402},67,[25,404,405],{},"    }\n",[25,407,409],{"class":27,"line":408},68,[25,410,38],{"emptyLinePlaceholder":37},[25,412,414],{"class":27,"line":413},69,[25,415,416],{},"    return dp[n][target];\n",[25,418,420],{"class":27,"line":419},70,[25,421,422],{},"}\n",[25,424,426],{"class":27,"line":425},71,[25,427,38],{"emptyLinePlaceholder":37},[25,429,431],{"class":27,"line":430},72,[25,432,433],{},"int main() {\n",[25,435,437],{"class":27,"line":436},73,[25,438,439],{},"    std::vector\u003Cint> set = {3, 34, 4, 12, 5, 2};\n",[25,441,443],{"class":27,"line":442},74,[25,444,445],{},"    int target = 9;\n",[25,447,449],{"class":27,"line":448},75,[25,450,38],{"emptyLinePlaceholder":37},[25,452,454],{"class":27,"line":453},76,[25,455,456],{},"    if (isSubsetSum(set, target)) {\n",[25,458,460],{"class":27,"line":459},77,[25,461,462],{},"        std::cout \u003C\u003C \"Ada subset dengan jumlah sama dengan target.\\n\";\n",[25,464,466],{"class":27,"line":465},78,[25,467,468],{},"    } else {\n",[25,470,472],{"class":27,"line":471},79,[25,473,474],{},"        std::cout \u003C\u003C \"Tidak ada subset yang cocok.\\n\";\n",[25,476,478],{"class":27,"line":477},80,[25,479,405],{},[25,481,483],{"class":27,"line":482},81,[25,484,38],{"emptyLinePlaceholder":37},[25,486,488],{"class":27,"line":487},82,[25,489,490],{},"    return 0;\n",[25,492,494],{"class":27,"line":493},83,[25,495,422],{},[497,498,500],"h2",{"id":499},"visualisasi-tabel-dp-contoh","Visualisasi Tabel DP (Contoh)",[502,503,504],"p",{},"Elemen → 0 3 34 4 12 5 2 Target 0 T T T T T T T Target 1 F F F F F F T Target 2 F F F F F F T Target 3 F T T T T T T ...",[497,506,508],{"id":507},"kelebihan-dan-kekurangan","Kelebihan dan Kekurangan",[510,511,513],"h3",{"id":512},"kelebihan","✅ Kelebihan:",[515,516,517,521,524],"ul",{},[518,519,520],"li",{},"Memberi solusi pasti untuk masalah subset.",[518,522,523],{},"Dapat dimodifikasi untuk menghitung jumlah kombinasi, mencetak subset, dsb.",[518,525,526,527,531],{},"Cocok untuk ",[528,529,530],"strong",{},"pendekatan dinamis"," dan pembelajaran dasar DP.",[510,533,535],{"id":534},"kekurangan","❌ Kekurangan:",[515,537,538,545],{},[518,539,540,541,544],{},"Waktu eksekusi bisa ",[528,542,543],{},"eksponensial"," untuk input besar jika menggunakan brute-force.",[518,546,547],{},"Memori besar jika target besar (meskipun bisa dioptimalkan ke 1D array).",[497,549,551],{"id":550},"kesimpulan","Kesimpulan",[502,553,554,555,558,559,562],{},"Masalah ",[528,556,557],{},"Subset Sum"," adalah dasar dari banyak algoritma optimasi dan kombinatorial. Ini juga menjadi contoh klasik dari ",[528,560,561],{},"Dynamic Programming",", yang mengajarkan kita cara menyelesaikan masalah besar dengan memecahnya menjadi submasalah kecil.",[564,565,566],"style",{},"html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}",{"title":20,"searchDepth":34,"depth":34,"links":568},[569,570,574],{"id":499,"depth":34,"text":500},{"id":507,"depth":34,"text":508,"children":571},[572,573],{"id":512,"depth":41,"text":513},{"id":534,"depth":41,"text":535},{"id":550,"depth":34,"text":551},null,"Masalah klasik dalam ilmu komputer: Menentukan apakah ada subset dari himpunan bilangan yang jumlahnya sama dengan nilai target tertentu","md",{"script":579},[580],{"type":581,"key":582,"data-nuxt-schema-org":37,"nodes":583},"application/ld+json","schema-org-graph",[584],{"_resolver":585},"webPage","/articles/6.jpeg",{},{"props":589},{},"/en/articles/subset-sum-problem",{"_resolver":585},{"title":5,"description":576},{"loc":590,"videos":594,"images":595,"lastmod":596},[],[],"2025-06-13T00:00:00.000Z","en/articles/subset-sum-problem",[],"pzTZZY5tTA-jObgmCvguLdjvxoYWB2Z-FZxO7TMTPx4",1750332718063]