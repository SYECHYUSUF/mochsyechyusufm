[{"data":1,"prerenderedAt":734},["ShallowReactive",2],{"/en/articles/subset-sum-problem":3},{"id":4,"title":5,"body":6,"date":710,"description":711,"extension":19,"head":712,"image":720,"meta":721,"navigation":38,"ogImage":722,"path":724,"readingTime":710,"robots":710,"schemaOrg":725,"seo":726,"sitemap":727,"stem":731,"tags":732,"__hash__":733},"articles_en/en/articles/subset-sum-problem.md","Masalah Subset Sum",{"type":7,"value":8,"toc":702},"minimal",[9,14,632,637,641,645,650,668,672,684,688,698],[10,11,13],"h1",{"id":12},"subset-sum-problem","SUBSET SUM PROBLEM",[15,16,21],"pre",{"className":17,"code":18,"language":19,"meta":20,"style":20},"language-md shiki shiki-themes github-dark github-dark github-light","# Masalah Subset Sum: Apakah Ada Subset yang Jumlahnya Sama dengan Target?\n\nMasalah **Subset Sum** adalah salah satu masalah klasik dalam **ilmu komputer dan teori algoritma**, khususnya dalam kategori **NP-Complete Problem**. Tujuan dari masalah ini adalah untuk menentukan apakah terdapat **subset dari suatu himpunan bilangan bulat** yang **jumlah elemennya sama dengan nilai target tertentu**.\n\n---\n\n## Contoh Masalah\n\n**Input**:\n- Himpunan: `{3, 34, 4, 12, 5, 2}`\n- Target: `9`\n\n**Pertanyaan**:\nApakah ada subset dari elemen-elemen di atas yang jika dijumlahkan menghasilkan `9`?\n\n**Jawaban**:\n‚úÖ Ya, subset `{4, 5}` menghasilkan jumlah `9`.\n\n---\n\n## Aplikasi Nyata\n\nMasalah ini muncul dalam berbagai konteks praktis:\n\n- üí≥ **Pemilihan kombinasi item** agar sesuai dengan kapasitas maksimum (misalnya dalam masalah knapsack).\n- üíµ **Pengalokasian sumber daya** untuk mencapai target anggaran.\n- üß© **Permainan dan puzzle logika**.\n- üîê **Kriptografi**, terutama dalam konstruk algoritma knapsack cryptosystem.\n\n---\n\n## Pendekatan Penyelesaian\n\n### 1. **Rekursi Brute-Force**\nCoba semua kemungkinan subset. Kompleksitas waktu: `O(2^n)`.\n\n### 2. **Memoization / Top-down Dynamic Programming**\nGunakan cache untuk menyimpan hasil submasalah. Kompleksitas waktu: `O(n * target)`.\n\n### 3. **Tabulasi / Bottom-up DP**\nGunakan tabel boolean `dp[i][j]` yang menyatakan apakah mungkin mendapatkan jumlah `j` dari elemen `0...i`.\n\n---\n\n## Implementasi C++: Dynamic Programming\n\n```cpp\n#include \u003Ciostream>\n#include \u003Cvector>\n\nbool isSubsetSum(const std::vector\u003Cint>& nums, int target) {\n    int n = nums.size();\n    std::vector\u003Cstd::vector\u003Cbool>> dp(n + 1, std::vector\u003Cbool>(target + 1, false));\n\n    // Inisialisasi: target 0 bisa dicapai tanpa memilih elemen\n    for (int i = 0; i \u003C= n; i++) dp[i][0] = true;\n\n    // Mengisi tabel DP\n    for (int i = 1; i \u003C= n; i++) {\n        for (int sum = 1; sum \u003C= target; sum++) {\n            if (nums[i - 1] \u003C= sum) {\n                dp[i][sum] = dp[i - 1][sum] || dp[i - 1][sum - nums[i - 1]];\n            } else {\n                dp[i][sum] = dp[i - 1][sum];\n            }\n        }\n    }\n\n    return dp[n][target];\n}\n\nint main() {\n    std::vector\u003Cint> set = {3, 34, 4, 12, 5, 2};\n    int target = 9;\n\n    if (isSubsetSum(set, target)) {\n        std::cout \u003C\u003C \"Ada subset dengan jumlah sama dengan target.\\n\";\n    } else {\n        std::cout \u003C\u003C \"Tidak ada subset yang cocok.\\n\";\n    }\n\n    return 0;\n}\n","md","",[22,23,24,33,40,78,83,89,94,100,105,114,128,139,144,152,164,169,177,193,198,203,208,214,219,225,230,244,258,271,285,290,295,300,306,311,320,331,336,345,356,361,370,393,398,403,408,414,419,425,431,437,442,448,454,460,465,471,477,482,488,494,500,506,512,518,524,530,536,542,547,553,559,564,570,576,582,587,593,599,605,611,616,621,627],"code",{"__ignoreMap":20},[25,26,29],"span",{"class":27,"line":28},"line",1,[25,30,32],{"class":31},"sXvaJ","# Masalah Subset Sum: Apakah Ada Subset yang Jumlahnya Sama dengan Target?\n",[25,34,36],{"class":27,"line":35},2,[25,37,39],{"emptyLinePlaceholder":38},true,"\n",[25,41,43,47,51,54,57,60,63,66,69,72,75],{"class":27,"line":42},3,[25,44,46],{"class":45},"suVJd","Masalah ",[25,48,50],{"class":49},"s9_AW","**Subset Sum**",[25,52,53],{"class":45}," adalah salah satu masalah klasik dalam ",[25,55,56],{"class":49},"**ilmu komputer dan teori algoritma**",[25,58,59],{"class":45},", khususnya dalam kategori ",[25,61,62],{"class":49},"**NP-Complete Problem**",[25,64,65],{"class":45},". Tujuan dari masalah ini adalah untuk menentukan apakah terdapat ",[25,67,68],{"class":49},"**subset dari suatu himpunan bilangan bulat**",[25,70,71],{"class":45}," yang ",[25,73,74],{"class":49},"**jumlah elemennya sama dengan nilai target tertentu**",[25,76,77],{"class":45},".\n",[25,79,81],{"class":27,"line":80},4,[25,82,39],{"emptyLinePlaceholder":38},[25,84,86],{"class":27,"line":85},5,[25,87,88],{"class":31},"---\n",[25,90,92],{"class":27,"line":91},6,[25,93,39],{"emptyLinePlaceholder":38},[25,95,97],{"class":27,"line":96},7,[25,98,99],{"class":31},"## Contoh Masalah\n",[25,101,103],{"class":27,"line":102},8,[25,104,39],{"emptyLinePlaceholder":38},[25,106,108,111],{"class":27,"line":107},9,[25,109,110],{"class":49},"**Input**",[25,112,113],{"class":45},":\n",[25,115,117,121,124],{"class":27,"line":116},10,[25,118,120],{"class":119},"s1uPE","-",[25,122,123],{"class":45}," Himpunan: ",[25,125,127],{"class":126},"sAPL1","`{3, 34, 4, 12, 5, 2}`\n",[25,129,131,133,136],{"class":27,"line":130},11,[25,132,120],{"class":119},[25,134,135],{"class":45}," Target: ",[25,137,138],{"class":126},"`9`\n",[25,140,142],{"class":27,"line":141},12,[25,143,39],{"emptyLinePlaceholder":38},[25,145,147,150],{"class":27,"line":146},13,[25,148,149],{"class":49},"**Pertanyaan**",[25,151,113],{"class":45},[25,153,155,158,161],{"class":27,"line":154},14,[25,156,157],{"class":45},"Apakah ada subset dari elemen-elemen di atas yang jika dijumlahkan menghasilkan ",[25,159,160],{"class":126},"`9`",[25,162,163],{"class":45},"?\n",[25,165,167],{"class":27,"line":166},15,[25,168,39],{"emptyLinePlaceholder":38},[25,170,172,175],{"class":27,"line":171},16,[25,173,174],{"class":49},"**Jawaban**",[25,176,113],{"class":45},[25,178,180,183,186,189,191],{"class":27,"line":179},17,[25,181,182],{"class":45},"‚úÖ Ya, subset ",[25,184,185],{"class":126},"`{4, 5}`",[25,187,188],{"class":45}," menghasilkan jumlah ",[25,190,160],{"class":126},[25,192,77],{"class":45},[25,194,196],{"class":27,"line":195},18,[25,197,39],{"emptyLinePlaceholder":38},[25,199,201],{"class":27,"line":200},19,[25,202,88],{"class":31},[25,204,206],{"class":27,"line":205},20,[25,207,39],{"emptyLinePlaceholder":38},[25,209,211],{"class":27,"line":210},21,[25,212,213],{"class":31},"## Aplikasi Nyata\n",[25,215,217],{"class":27,"line":216},22,[25,218,39],{"emptyLinePlaceholder":38},[25,220,222],{"class":27,"line":221},23,[25,223,224],{"class":45},"Masalah ini muncul dalam berbagai konteks praktis:\n",[25,226,228],{"class":27,"line":227},24,[25,229,39],{"emptyLinePlaceholder":38},[25,231,233,235,238,241],{"class":27,"line":232},25,[25,234,120],{"class":119},[25,236,237],{"class":45}," üí≥ ",[25,239,240],{"class":49},"**Pemilihan kombinasi item**",[25,242,243],{"class":45}," agar sesuai dengan kapasitas maksimum (misalnya dalam masalah knapsack).\n",[25,245,247,249,252,255],{"class":27,"line":246},26,[25,248,120],{"class":119},[25,250,251],{"class":45}," üíµ ",[25,253,254],{"class":49},"**Pengalokasian sumber daya**",[25,256,257],{"class":45}," untuk mencapai target anggaran.\n",[25,259,261,263,266,269],{"class":27,"line":260},27,[25,262,120],{"class":119},[25,264,265],{"class":45}," üß© ",[25,267,268],{"class":49},"**Permainan dan puzzle logika**",[25,270,77],{"class":45},[25,272,274,276,279,282],{"class":27,"line":273},28,[25,275,120],{"class":119},[25,277,278],{"class":45}," üîê ",[25,280,281],{"class":49},"**Kriptografi**",[25,283,284],{"class":45},", terutama dalam konstruk algoritma knapsack cryptosystem.\n",[25,286,288],{"class":27,"line":287},29,[25,289,39],{"emptyLinePlaceholder":38},[25,291,293],{"class":27,"line":292},30,[25,294,88],{"class":31},[25,296,298],{"class":27,"line":297},31,[25,299,39],{"emptyLinePlaceholder":38},[25,301,303],{"class":27,"line":302},32,[25,304,305],{"class":31},"## Pendekatan Penyelesaian\n",[25,307,309],{"class":27,"line":308},33,[25,310,39],{"emptyLinePlaceholder":38},[25,312,314,317],{"class":27,"line":313},34,[25,315,316],{"class":31},"### 1. ",[25,318,319],{"class":49},"**Rekursi Brute-Force**\n",[25,321,323,326,329],{"class":27,"line":322},35,[25,324,325],{"class":45},"Coba semua kemungkinan subset. Kompleksitas waktu: ",[25,327,328],{"class":126},"`O(2^n)`",[25,330,77],{"class":45},[25,332,334],{"class":27,"line":333},36,[25,335,39],{"emptyLinePlaceholder":38},[25,337,339,342],{"class":27,"line":338},37,[25,340,341],{"class":31},"### 2. ",[25,343,344],{"class":49},"**Memoization / Top-down Dynamic Programming**\n",[25,346,348,351,354],{"class":27,"line":347},38,[25,349,350],{"class":45},"Gunakan cache untuk menyimpan hasil submasalah. Kompleksitas waktu: ",[25,352,353],{"class":126},"`O(n * target)`",[25,355,77],{"class":45},[25,357,359],{"class":27,"line":358},39,[25,360,39],{"emptyLinePlaceholder":38},[25,362,364,367],{"class":27,"line":363},40,[25,365,366],{"class":31},"### 3. ",[25,368,369],{"class":49},"**Tabulasi / Bottom-up DP**\n",[25,371,373,376,379,382,385,388,391],{"class":27,"line":372},41,[25,374,375],{"class":45},"Gunakan tabel boolean ",[25,377,378],{"class":126},"`dp[i][j]`",[25,380,381],{"class":45}," yang menyatakan apakah mungkin mendapatkan jumlah ",[25,383,384],{"class":126},"`j`",[25,386,387],{"class":45}," dari elemen ",[25,389,390],{"class":126},"`0...i`",[25,392,77],{"class":45},[25,394,396],{"class":27,"line":395},42,[25,397,39],{"emptyLinePlaceholder":38},[25,399,401],{"class":27,"line":400},43,[25,402,88],{"class":31},[25,404,406],{"class":27,"line":405},44,[25,407,39],{"emptyLinePlaceholder":38},[25,409,411],{"class":27,"line":410},45,[25,412,413],{"class":31},"## Implementasi C++: Dynamic Programming\n",[25,415,417],{"class":27,"line":416},46,[25,418,39],{"emptyLinePlaceholder":38},[25,420,422],{"class":27,"line":421},47,[25,423,424],{"class":45},"```cpp\n",[25,426,428],{"class":27,"line":427},48,[25,429,430],{"class":45},"#include \u003Ciostream>\n",[25,432,434],{"class":27,"line":433},49,[25,435,436],{"class":45},"#include \u003Cvector>\n",[25,438,440],{"class":27,"line":439},50,[25,441,39],{"emptyLinePlaceholder":38},[25,443,445],{"class":27,"line":444},51,[25,446,447],{"class":45},"bool isSubsetSum(const std::vector\u003Cint>& nums, int target) {\n",[25,449,451],{"class":27,"line":450},52,[25,452,453],{"class":45},"    int n = nums.size();\n",[25,455,457],{"class":27,"line":456},53,[25,458,459],{"class":45},"    std::vector\u003Cstd::vector\u003Cbool>> dp(n + 1, std::vector\u003Cbool>(target + 1, false));\n",[25,461,463],{"class":27,"line":462},54,[25,464,39],{"emptyLinePlaceholder":38},[25,466,468],{"class":27,"line":467},55,[25,469,470],{"class":45},"    // Inisialisasi: target 0 bisa dicapai tanpa memilih elemen\n",[25,472,474],{"class":27,"line":473},56,[25,475,476],{"class":45},"    for (int i = 0; i \u003C= n; i++) dp[i][0] = true;\n",[25,478,480],{"class":27,"line":479},57,[25,481,39],{"emptyLinePlaceholder":38},[25,483,485],{"class":27,"line":484},58,[25,486,487],{"class":45},"    // Mengisi tabel DP\n",[25,489,491],{"class":27,"line":490},59,[25,492,493],{"class":45},"    for (int i = 1; i \u003C= n; i++) {\n",[25,495,497],{"class":27,"line":496},60,[25,498,499],{"class":45},"        for (int sum = 1; sum \u003C= target; sum++) {\n",[25,501,503],{"class":27,"line":502},61,[25,504,505],{"class":45},"            if (nums[i - 1] \u003C= sum) {\n",[25,507,509],{"class":27,"line":508},62,[25,510,511],{"class":45},"                dp[i][sum] = dp[i - 1][sum] || dp[i - 1][sum - nums[i - 1]];\n",[25,513,515],{"class":27,"line":514},63,[25,516,517],{"class":45},"            } else {\n",[25,519,521],{"class":27,"line":520},64,[25,522,523],{"class":45},"                dp[i][sum] = dp[i - 1][sum];\n",[25,525,527],{"class":27,"line":526},65,[25,528,529],{"class":45},"            }\n",[25,531,533],{"class":27,"line":532},66,[25,534,535],{"class":45},"        }\n",[25,537,539],{"class":27,"line":538},67,[25,540,541],{"class":45},"    }\n",[25,543,545],{"class":27,"line":544},68,[25,546,39],{"emptyLinePlaceholder":38},[25,548,550],{"class":27,"line":549},69,[25,551,552],{"class":45},"    return dp[n][target];\n",[25,554,556],{"class":27,"line":555},70,[25,557,558],{"class":45},"}\n",[25,560,562],{"class":27,"line":561},71,[25,563,39],{"emptyLinePlaceholder":38},[25,565,567],{"class":27,"line":566},72,[25,568,569],{"class":45},"int main() {\n",[25,571,573],{"class":27,"line":572},73,[25,574,575],{"class":45},"    std::vector\u003Cint> set = {3, 34, 4, 12, 5, 2};\n",[25,577,579],{"class":27,"line":578},74,[25,580,581],{"class":45},"    int target = 9;\n",[25,583,585],{"class":27,"line":584},75,[25,586,39],{"emptyLinePlaceholder":38},[25,588,590],{"class":27,"line":589},76,[25,591,592],{"class":45},"    if (isSubsetSum(set, target)) {\n",[25,594,596],{"class":27,"line":595},77,[25,597,598],{"class":45},"        std::cout \u003C\u003C \"Ada subset dengan jumlah sama dengan target.\\n\";\n",[25,600,602],{"class":27,"line":601},78,[25,603,604],{"class":45},"    } else {\n",[25,606,608],{"class":27,"line":607},79,[25,609,610],{"class":45},"        std::cout \u003C\u003C \"Tidak ada subset yang cocok.\\n\";\n",[25,612,614],{"class":27,"line":613},80,[25,615,541],{"class":45},[25,617,619],{"class":27,"line":618},81,[25,620,39],{"emptyLinePlaceholder":38},[25,622,624],{"class":27,"line":623},82,[25,625,626],{"class":45},"    return 0;\n",[25,628,630],{"class":27,"line":629},83,[25,631,558],{"class":45},[633,634,636],"h2",{"id":635},"visualisasi-tabel-dp-contoh","Visualisasi Tabel DP (Contoh)",[638,639,640],"p",{},"Elemen ‚Üí 0 3 34 4 12 5 2 Target 0 T T T T T T T Target 1 F F F F F F T Target 2 F F F F F F T Target 3 F T T T T T T ...",[633,642,644],{"id":643},"kelebihan-dan-kekurangan","Kelebihan dan Kekurangan",[646,647,649],"h3",{"id":648},"kelebihan","‚úÖ Kelebihan:",[651,652,653,657,660],"ul",{},[654,655,656],"li",{},"Memberi solusi pasti untuk masalah subset.",[654,658,659],{},"Dapat dimodifikasi untuk menghitung jumlah kombinasi, mencetak subset, dsb.",[654,661,662,663,667],{},"Cocok untuk ",[664,665,666],"strong",{},"pendekatan dinamis"," dan pembelajaran dasar DP.",[646,669,671],{"id":670},"kekurangan","‚ùå Kekurangan:",[651,673,674,681],{},[654,675,676,677,680],{},"Waktu eksekusi bisa ",[664,678,679],{},"eksponensial"," untuk input besar jika menggunakan brute-force.",[654,682,683],{},"Memori besar jika target besar (meskipun bisa dioptimalkan ke 1D array).",[633,685,687],{"id":686},"kesimpulan","Kesimpulan",[638,689,46,690,693,694,697],{},[664,691,692],{},"Subset Sum"," adalah dasar dari banyak algoritma optimasi dan kombinatorial. Ini juga menjadi contoh klasik dari ",[664,695,696],{},"Dynamic Programming",", yang mengajarkan kita cara menyelesaikan masalah besar dengan memecahnya menjadi submasalah kecil.",[699,700,701],"style",{},"html pre.shiki code .sXvaJ, html code.shiki .sXvaJ{--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;--shiki-default:#79B8FF;--shiki-default-font-weight:bold;--shiki-light:#005CC5;--shiki-light-font-weight:bold}html pre.shiki code .suVJd, html code.shiki .suVJd{--shiki-dark:#E1E4E8;--shiki-default:#E1E4E8;--shiki-light:#24292E}html pre.shiki code .s9_AW, html code.shiki .s9_AW{--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;--shiki-default:#E1E4E8;--shiki-default-font-weight:bold;--shiki-light:#24292E;--shiki-light-font-weight:bold}html pre.shiki code .s1uPE, html code.shiki .s1uPE{--shiki-dark:#FFAB70;--shiki-default:#FFAB70;--shiki-light:#E36209}html pre.shiki code .sAPL1, html code.shiki .sAPL1{--shiki-dark:#79B8FF;--shiki-default:#79B8FF;--shiki-light:#005CC5}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}",{"title":20,"searchDepth":35,"depth":35,"links":703},[704,705,709],{"id":635,"depth":35,"text":636},{"id":643,"depth":35,"text":644,"children":706},[707,708],{"id":648,"depth":42,"text":649},{"id":670,"depth":42,"text":671},{"id":686,"depth":35,"text":687},null,"Masalah klasik dalam ilmu komputer: Menentukan apakah ada subset dari himpunan bilangan yang jumlahnya sama dengan nilai target tertentu",{"script":713},[714],{"type":715,"key":716,"data-nuxt-schema-org":38,"nodes":717},"application/ld+json","schema-org-graph",[718],{"_resolver":719},"webPage","/articles/6.jpeg",{},{"props":723},{},"/en/articles/subset-sum-problem",{"_resolver":719},{"title":5,"description":711},{"loc":724,"videos":728,"images":729,"lastmod":730},[],[],"2025-06-13T00:00:00.000Z","en/articles/subset-sum-problem",[],"jz3PcrenzQqcA0CFqbRorLP-Fh1AA3lJBtsuOYI58O4",1750352811120]