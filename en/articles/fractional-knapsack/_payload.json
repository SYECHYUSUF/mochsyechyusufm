[{"data":1,"prerenderedAt":733},["ShallowReactive",2],{"/en/articles/fractional-knapsack":3},{"id":4,"title":5,"body":6,"date":708,"description":709,"extension":710,"head":711,"image":719,"meta":720,"navigation":37,"ogImage":721,"path":723,"readingTime":708,"robots":708,"schemaOrg":724,"seo":725,"sitemap":726,"stem":730,"tags":731,"__hash__":732},"articles_en/en/articles/fractional-knapsack.md","Memahami Fractional Knapsack Problem",{"type":7,"value":8,"toc":695},"minimal",[9,14,422,427,574,578,587,594,601,606,610,630,634,651,655,666,670,681,691],[10,11,13],"h1",{"id":12},"fractional-knapsack","FRACTIONAL KNAPSACK",[15,16,21],"pre",{"className":17,"code":18,"language":19,"meta":20,"style":20},"language-markdown shiki shiki-themes github-dark github-dark github-light","# üéí Apa itu Fractional Knapsack Problem?\n\n**Fractional Knapsack Problem** adalah masalah optimisasi klasik yang menggunakan **algoritma greedy** untuk memilih item dengan **nilai maksimum** yang dapat dimasukkan ke dalam tas (knapsack) dengan kapasitas terbatas.\n\nüîÑ **Berbeda dengan 0/1 Knapsack**, dalam masalah ini **item dapat diambil sebagian (fraksional)**.\n\n---\n\n## üí° Aplikasi Fractional Knapsack\n\n- üí∞ Manajemen anggaran dan sumber daya terbatas\n- üìà Pemilihan investasi dalam portofolio\n- üöõ Logistik dan distribusi barang\n- üßÆ Pengolahan data berdasarkan prioritas\n\n---\n\n## ‚öôÔ∏è Cara Kerja Algoritma\n\n1. **Hitung rasio nilai/berat (value/weight)** untuk setiap item\n2. **Urutkan item** berdasarkan rasio tersebut secara menurun (descending)\n3. **Pilih item secara greedy**:\n   - Jika seluruh berat item ‚â§ kapasitas sisa ‚Üí ambil penuh\n   - Jika berat item > kapasitas sisa ‚Üí ambil sebagian (fraksi)\n4. **Akumulasikan nilai** dan kurangi kapasitas\n\n---\n\n## üìä Contoh Masalah\n\nKita punya knapsack dengan kapasitas **50 unit**, dan 3 item berikut:\n\n| Item | Nilai | Berat | Rasio Nilai/Berat |\n|------|-------|--------|-------------------|\n| I1   | 60    | 10     | 6.0               |\n| I2   | 100   | 20     | 5.0               |\n| I3   | 120   | 30     | 4.0               |\n\n### üî¢ Langkah-langkah:\n- Urutkan: I1 (6), I2 (5), I3 (4)\n- Ambil I1 penuh (10): nilai += 60, kapasitas = 40\n- Ambil I2 penuh (20): nilai += 100, kapasitas = 20\n- Ambil 2/3 dari I3 (20 dari 30): nilai += 80\n- ‚úÖ **Total nilai: 60 + 100 + 80 = 240**\n\n---\n\n## üêç Implementasi Python\n\n```python\ndef fractional_knapsack(values, weights, capacity):\n    items = [(v / w, v, w) for v, w in zip(values, weights)]\n    items.sort(reverse=True)  # Urutkan berdasarkan rasio\n    \n    total_value = 0\n    for ratio, value, weight in items:\n        if capacity >= weight:\n            total_value += value\n            capacity -= weight\n        else:\n            total_value += value * (capacity / weight)\n            break\n    return total_value\n\n# Contoh penggunaan\nvalues = [60, 100, 120]\nweights = [10, 20, 30]\ncapacity = 50\nprint(\"Nilai maksimum:\", fractional_knapsack(values, weights, capacity))\n","markdown","",[22,23,24,32,39,45,50,56,61,67,72,78,83,89,95,101,107,112,117,122,128,133,139,145,151,157,163,169,174,179,184,190,195,201,206,212,218,224,230,236,241,247,253,259,265,271,277,282,287,292,298,303,309,315,321,327,333,339,345,351,357,363,369,375,381,387,392,398,404,410,416],"code",{"__ignoreMap":20},[25,26,29],"span",{"class":27,"line":28},"line",1,[25,30,31],{},"# üéí Apa itu Fractional Knapsack Problem?\n",[25,33,35],{"class":27,"line":34},2,[25,36,38],{"emptyLinePlaceholder":37},true,"\n",[25,40,42],{"class":27,"line":41},3,[25,43,44],{},"**Fractional Knapsack Problem** adalah masalah optimisasi klasik yang menggunakan **algoritma greedy** untuk memilih item dengan **nilai maksimum** yang dapat dimasukkan ke dalam tas (knapsack) dengan kapasitas terbatas.\n",[25,46,48],{"class":27,"line":47},4,[25,49,38],{"emptyLinePlaceholder":37},[25,51,53],{"class":27,"line":52},5,[25,54,55],{},"üîÑ **Berbeda dengan 0/1 Knapsack**, dalam masalah ini **item dapat diambil sebagian (fraksional)**.\n",[25,57,59],{"class":27,"line":58},6,[25,60,38],{"emptyLinePlaceholder":37},[25,62,64],{"class":27,"line":63},7,[25,65,66],{},"---\n",[25,68,70],{"class":27,"line":69},8,[25,71,38],{"emptyLinePlaceholder":37},[25,73,75],{"class":27,"line":74},9,[25,76,77],{},"## üí° Aplikasi Fractional Knapsack\n",[25,79,81],{"class":27,"line":80},10,[25,82,38],{"emptyLinePlaceholder":37},[25,84,86],{"class":27,"line":85},11,[25,87,88],{},"- üí∞ Manajemen anggaran dan sumber daya terbatas\n",[25,90,92],{"class":27,"line":91},12,[25,93,94],{},"- üìà Pemilihan investasi dalam portofolio\n",[25,96,98],{"class":27,"line":97},13,[25,99,100],{},"- üöõ Logistik dan distribusi barang\n",[25,102,104],{"class":27,"line":103},14,[25,105,106],{},"- üßÆ Pengolahan data berdasarkan prioritas\n",[25,108,110],{"class":27,"line":109},15,[25,111,38],{"emptyLinePlaceholder":37},[25,113,115],{"class":27,"line":114},16,[25,116,66],{},[25,118,120],{"class":27,"line":119},17,[25,121,38],{"emptyLinePlaceholder":37},[25,123,125],{"class":27,"line":124},18,[25,126,127],{},"## ‚öôÔ∏è Cara Kerja Algoritma\n",[25,129,131],{"class":27,"line":130},19,[25,132,38],{"emptyLinePlaceholder":37},[25,134,136],{"class":27,"line":135},20,[25,137,138],{},"1. **Hitung rasio nilai/berat (value/weight)** untuk setiap item\n",[25,140,142],{"class":27,"line":141},21,[25,143,144],{},"2. **Urutkan item** berdasarkan rasio tersebut secara menurun (descending)\n",[25,146,148],{"class":27,"line":147},22,[25,149,150],{},"3. **Pilih item secara greedy**:\n",[25,152,154],{"class":27,"line":153},23,[25,155,156],{},"   - Jika seluruh berat item ‚â§ kapasitas sisa ‚Üí ambil penuh\n",[25,158,160],{"class":27,"line":159},24,[25,161,162],{},"   - Jika berat item > kapasitas sisa ‚Üí ambil sebagian (fraksi)\n",[25,164,166],{"class":27,"line":165},25,[25,167,168],{},"4. **Akumulasikan nilai** dan kurangi kapasitas\n",[25,170,172],{"class":27,"line":171},26,[25,173,38],{"emptyLinePlaceholder":37},[25,175,177],{"class":27,"line":176},27,[25,178,66],{},[25,180,182],{"class":27,"line":181},28,[25,183,38],{"emptyLinePlaceholder":37},[25,185,187],{"class":27,"line":186},29,[25,188,189],{},"## üìä Contoh Masalah\n",[25,191,193],{"class":27,"line":192},30,[25,194,38],{"emptyLinePlaceholder":37},[25,196,198],{"class":27,"line":197},31,[25,199,200],{},"Kita punya knapsack dengan kapasitas **50 unit**, dan 3 item berikut:\n",[25,202,204],{"class":27,"line":203},32,[25,205,38],{"emptyLinePlaceholder":37},[25,207,209],{"class":27,"line":208},33,[25,210,211],{},"| Item | Nilai | Berat | Rasio Nilai/Berat |\n",[25,213,215],{"class":27,"line":214},34,[25,216,217],{},"|------|-------|--------|-------------------|\n",[25,219,221],{"class":27,"line":220},35,[25,222,223],{},"| I1   | 60    | 10     | 6.0               |\n",[25,225,227],{"class":27,"line":226},36,[25,228,229],{},"| I2   | 100   | 20     | 5.0               |\n",[25,231,233],{"class":27,"line":232},37,[25,234,235],{},"| I3   | 120   | 30     | 4.0               |\n",[25,237,239],{"class":27,"line":238},38,[25,240,38],{"emptyLinePlaceholder":37},[25,242,244],{"class":27,"line":243},39,[25,245,246],{},"### üî¢ Langkah-langkah:\n",[25,248,250],{"class":27,"line":249},40,[25,251,252],{},"- Urutkan: I1 (6), I2 (5), I3 (4)\n",[25,254,256],{"class":27,"line":255},41,[25,257,258],{},"- Ambil I1 penuh (10): nilai += 60, kapasitas = 40\n",[25,260,262],{"class":27,"line":261},42,[25,263,264],{},"- Ambil I2 penuh (20): nilai += 100, kapasitas = 20\n",[25,266,268],{"class":27,"line":267},43,[25,269,270],{},"- Ambil 2/3 dari I3 (20 dari 30): nilai += 80\n",[25,272,274],{"class":27,"line":273},44,[25,275,276],{},"- ‚úÖ **Total nilai: 60 + 100 + 80 = 240**\n",[25,278,280],{"class":27,"line":279},45,[25,281,38],{"emptyLinePlaceholder":37},[25,283,285],{"class":27,"line":284},46,[25,286,66],{},[25,288,290],{"class":27,"line":289},47,[25,291,38],{"emptyLinePlaceholder":37},[25,293,295],{"class":27,"line":294},48,[25,296,297],{},"## üêç Implementasi Python\n",[25,299,301],{"class":27,"line":300},49,[25,302,38],{"emptyLinePlaceholder":37},[25,304,306],{"class":27,"line":305},50,[25,307,308],{},"```python\n",[25,310,312],{"class":27,"line":311},51,[25,313,314],{},"def fractional_knapsack(values, weights, capacity):\n",[25,316,318],{"class":27,"line":317},52,[25,319,320],{},"    items = [(v / w, v, w) for v, w in zip(values, weights)]\n",[25,322,324],{"class":27,"line":323},53,[25,325,326],{},"    items.sort(reverse=True)  # Urutkan berdasarkan rasio\n",[25,328,330],{"class":27,"line":329},54,[25,331,332],{},"    \n",[25,334,336],{"class":27,"line":335},55,[25,337,338],{},"    total_value = 0\n",[25,340,342],{"class":27,"line":341},56,[25,343,344],{},"    for ratio, value, weight in items:\n",[25,346,348],{"class":27,"line":347},57,[25,349,350],{},"        if capacity >= weight:\n",[25,352,354],{"class":27,"line":353},58,[25,355,356],{},"            total_value += value\n",[25,358,360],{"class":27,"line":359},59,[25,361,362],{},"            capacity -= weight\n",[25,364,366],{"class":27,"line":365},60,[25,367,368],{},"        else:\n",[25,370,372],{"class":27,"line":371},61,[25,373,374],{},"            total_value += value * (capacity / weight)\n",[25,376,378],{"class":27,"line":377},62,[25,379,380],{},"            break\n",[25,382,384],{"class":27,"line":383},63,[25,385,386],{},"    return total_value\n",[25,388,390],{"class":27,"line":389},64,[25,391,38],{"emptyLinePlaceholder":37},[25,393,395],{"class":27,"line":394},65,[25,396,397],{},"# Contoh penggunaan\n",[25,399,401],{"class":27,"line":400},66,[25,402,403],{},"values = [60, 100, 120]\n",[25,405,407],{"class":27,"line":406},67,[25,408,409],{},"weights = [10, 20, 30]\n",[25,411,413],{"class":27,"line":412},68,[25,414,415],{},"capacity = 50\n",[25,417,419],{"class":27,"line":418},69,[25,420,421],{},"print(\"Nilai maksimum:\", fractional_knapsack(values, weights, capacity))\n",[423,424,426],"h2",{"id":425},"Ô∏è-implementasi-javascript","üñ•Ô∏è Implementasi JavaScript",[15,428,432],{"className":429,"code":430,"language":431,"meta":20,"style":20},"language-javascript shiki shiki-themes github-dark github-dark github-light","function fractionalKnapsack(values, weights, capacity) {\n    const items = values.map((v, i) => ({\n        ratio: v / weights[i],\n        value: v,\n        weight: weights[i],\n    }));\n\n    items.sort((a, b) => b.ratio - a.ratio);\n\n    let totalValue = 0;\n\n    for (let item of items) {\n        if (capacity >= item.weight) {\n            totalValue += item.value;\n            capacity -= item.weight;\n        } else {\n            totalValue += item.value * (capacity / item.weight);\n            break;\n        }\n    }\n\n    return totalValue;\n}\n\n// Contoh penggunaan\nconst values = [60, 100, 120];\nconst weights = [10, 20, 30];\nconst capacity = 50;\nconsole.log(\"Nilai maksimum:\", fractionalKnapsack(values, weights, capacity));\n","javascript",[22,433,434,439,444,449,454,459,464,468,473,477,482,486,491,496,501,506,511,516,521,526,531,535,540,545,549,554,559,564,569],{"__ignoreMap":20},[25,435,436],{"class":27,"line":28},[25,437,438],{},"function fractionalKnapsack(values, weights, capacity) {\n",[25,440,441],{"class":27,"line":34},[25,442,443],{},"    const items = values.map((v, i) => ({\n",[25,445,446],{"class":27,"line":41},[25,447,448],{},"        ratio: v / weights[i],\n",[25,450,451],{"class":27,"line":47},[25,452,453],{},"        value: v,\n",[25,455,456],{"class":27,"line":52},[25,457,458],{},"        weight: weights[i],\n",[25,460,461],{"class":27,"line":58},[25,462,463],{},"    }));\n",[25,465,466],{"class":27,"line":63},[25,467,38],{"emptyLinePlaceholder":37},[25,469,470],{"class":27,"line":69},[25,471,472],{},"    items.sort((a, b) => b.ratio - a.ratio);\n",[25,474,475],{"class":27,"line":74},[25,476,38],{"emptyLinePlaceholder":37},[25,478,479],{"class":27,"line":80},[25,480,481],{},"    let totalValue = 0;\n",[25,483,484],{"class":27,"line":85},[25,485,38],{"emptyLinePlaceholder":37},[25,487,488],{"class":27,"line":91},[25,489,490],{},"    for (let item of items) {\n",[25,492,493],{"class":27,"line":97},[25,494,495],{},"        if (capacity >= item.weight) {\n",[25,497,498],{"class":27,"line":103},[25,499,500],{},"            totalValue += item.value;\n",[25,502,503],{"class":27,"line":109},[25,504,505],{},"            capacity -= item.weight;\n",[25,507,508],{"class":27,"line":114},[25,509,510],{},"        } else {\n",[25,512,513],{"class":27,"line":119},[25,514,515],{},"            totalValue += item.value * (capacity / item.weight);\n",[25,517,518],{"class":27,"line":124},[25,519,520],{},"            break;\n",[25,522,523],{"class":27,"line":130},[25,524,525],{},"        }\n",[25,527,528],{"class":27,"line":135},[25,529,530],{},"    }\n",[25,532,533],{"class":27,"line":141},[25,534,38],{"emptyLinePlaceholder":37},[25,536,537],{"class":27,"line":147},[25,538,539],{},"    return totalValue;\n",[25,541,542],{"class":27,"line":153},[25,543,544],{},"}\n",[25,546,547],{"class":27,"line":159},[25,548,38],{"emptyLinePlaceholder":37},[25,550,551],{"class":27,"line":165},[25,552,553],{},"// Contoh penggunaan\n",[25,555,556],{"class":27,"line":171},[25,557,558],{},"const values = [60, 100, 120];\n",[25,560,561],{"class":27,"line":176},[25,562,563],{},"const weights = [10, 20, 30];\n",[25,565,566],{"class":27,"line":181},[25,567,568],{},"const capacity = 50;\n",[25,570,571],{"class":27,"line":186},[25,572,573],{},"console.log(\"Nilai maksimum:\", fractionalKnapsack(values, weights, capacity));\n",[423,575,577],{"id":576},"Ô∏è-kompleksitas-optimasi","‚è±Ô∏è Kompleksitas & Optimasi",[579,580,582,583],"h3",{"id":581},"waktu-on-log-n","‚è≥ Waktu: ",[584,585,586],"strong",{},"O(n log n)",[588,589,590],"ul",{},[591,592,593],"li",{},"Karena pengurutan berdasarkan rasio",[579,595,597,598],{"id":596},"ruang-on","üíæ Ruang: ",[584,599,600],{},"O(n)",[588,602,603],{},[591,604,605],{},"Untuk menyimpan daftar item dan hasil",[579,607,609],{"id":608},"optimasi","‚ö° Optimasi:",[588,611,612,618,624],{},[591,613,614,617],{},[584,615,616],{},"In-place sorting"," ‚Üí hemat memori",[591,619,620,623],{},[584,621,622],{},"Parallel sort"," ‚Üí untuk skala besar",[591,625,626,629],{},[584,627,628],{},"Pre-sorting"," ‚Üí jika data sudah terurut",[423,631,633],{"id":632},"kelebihan","‚úÖ Kelebihan",[588,635,636,639,645],{},[591,637,638],{},"Greedy, efisien, dan mudah diimplementasikan",[591,640,641,642],{},"Menjamin ",[584,643,644],{},"solusi optimal",[591,646,647,648],{},"Mendukung ",[584,649,650],{},"pengambilan fraksional",[423,652,654],{"id":653},"kekurangan","‚ùå Kekurangan",[588,656,657,660,663],{},[591,658,659],{},"Tidak cocok untuk item yang harus diambil utuh (gunakan 0/1 Knapsack)",[591,661,662],{},"Perlu sorting terlebih dahulu",[591,664,665],{},"Hanya mengoptimalkan berdasarkan rasio, tidak mempertimbangkan kombinasi",[423,667,669],{"id":668},"kesimpulan","üéØ Kesimpulan",[671,672,673,676,677,680],"p",{},[584,674,675],{},"Fractional Knapsack Problem"," adalah contoh sempurna penggunaan algoritma greedy untuk ",[584,678,679],{},"masalah optimisasi nilai maksimum"," dalam batasan kapasitas. Dengan memilih berdasarkan rasio nilai per berat, algoritma ini menawarkan efisiensi tinggi dan solusi optimal untuk berbagai aplikasi dunia nyata.",[682,683,684],"blockquote",{},[671,685,686,687],{},"üöÄ ",[688,689,690],"em",{},"Simple yet powerful. Fractional Knapsack shows how greedy choice leads to global optimum when conditions are right.",[692,693,694],"style",{},"html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}",{"title":20,"searchDepth":34,"depth":34,"links":696},[697,698,705,706,707],{"id":425,"depth":34,"text":426},{"id":576,"depth":34,"text":577,"children":699},[700,702,704],{"id":581,"depth":41,"text":701},"‚è≥ Waktu: O(n log n)",{"id":596,"depth":41,"text":703},"üíæ Ruang: O(n)",{"id":608,"depth":41,"text":609},{"id":632,"depth":34,"text":633},{"id":653,"depth":34,"text":654},{"id":668,"depth":34,"text":669},null,"Pelajari bagaimana memaksimalkan nilai dalam knapsack dengan kapasitas terbatas menggunakan pendekatan greedy.","md",{"script":712},[713],{"type":714,"key":715,"data-nuxt-schema-org":37,"nodes":716},"application/ld+json","schema-org-graph",[717],{"_resolver":718},"webPage","/articles/9.jpeg",{},{"props":722},{},"/en/articles/fractional-knapsack",{"_resolver":718},{"title":5,"description":709},{"loc":723,"videos":727,"images":728,"lastmod":729},[],[],"2025-06-13T00:00:00.000Z","en/articles/fractional-knapsack",[],"jLyeOKxCtnDjEnc1pcUJBABVsLW5U2ekO9hhxAtP8nk",1750331278438]