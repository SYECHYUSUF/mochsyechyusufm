[{"data":1,"prerenderedAt":822},["ShallowReactive",2],{"/en/articles/activity-promblem-selection":3},{"id":4,"title":5,"body":6,"date":798,"description":799,"extension":19,"head":800,"image":808,"meta":809,"navigation":38,"ogImage":810,"path":812,"readingTime":798,"robots":798,"schemaOrg":813,"seo":814,"sitemap":815,"stem":819,"tags":820,"__hash__":821},"articles_en/en/articles/activity-promblem-selection.md","Memahami Activity Selection Problem",{"type":7,"value":8,"toc":785},"minimal",[9,14,539,544,657,661,669,676,683,688,692,705,709,727,731,748,752,771,781],[10,11,13],"h1",{"id":12},"activity-promblem-selection","ACTIVITY PROMBLEM SELECTION",[15,16,21],"pre",{"className":17,"code":18,"language":19,"meta":20,"style":20},"language-md shiki shiki-themes github-dark github-dark github-light","# üóìÔ∏è Apa itu Activity Selection Problem?\n\n**Activity Selection Problem** adalah masalah optimisasi klasik dalam ilmu komputer. Tujuannya adalah untuk **memilih sebanyak mungkin aktivitas** dari himpunan yang diberikan **tanpa ada yang saling tumpang tindih**, dengan setiap aktivitas memiliki waktu mulai dan selesai.\n\nüß† Masalah ini diselesaikan menggunakan pendekatan **greedy**, yang memilih aktivitas dengan **waktu selesai paling awal** terlebih dahulu.\n\n---\n\n## üìå Aplikasi Nyata\n\n- üìÖ Penjadwalan rapat atau kelas dalam satu ruangan\n- üßë‚Äçüíº Manajemen tugas dalam satu waktu kerja\n- üñ•Ô∏è Penjadwalan proses di CPU\n- üåê Alokasi bandwidth di jaringan\n\n---\n\n## üîß Cara Kerja Algoritma Greedy\n\n1. **Urutkan aktivitas** berdasarkan waktu selesai secara ascending.\n2. **Pilih aktivitas pertama** (dengan waktu selesai paling awal).\n3. Tandai waktu selesai aktivitas ini sebagai batas terakhir.\n4. Untuk setiap aktivitas berikutnya:\n   - Jika waktu mulai ‚â• batas terakhir ‚Üí pilih aktivitas\n   - Perbarui batas terakhir menjadi waktu selesai aktivitas tersebut.\n\nüìà Algoritma ini **menjamin jumlah maksimal aktivitas** yang dapat dipilih **tanpa konflik**.\n\n---\n\n## üßÆ Contoh Permasalahan\n\n### Daftar Aktivitas\n\n| Aktivitas | Mulai | Selesai |\n|-----------|--------|---------|\n| A1        | 1      | 4       |\n| A2        | 3      | 5       |\n| A3        | 5      | 7       |\n| A4        | 3      | 8       |\n| A5        | 8      | 9       |\n\n### Langkah Solusi:\n\n1. Urutkan: A1(4), A2(5), A3(7), A4(8), A5(9)\n2. Pilih A1 (selesai jam 4)\n3. Lewati A2 & A4 (karena mulai \u003C 4)\n4. Pilih A3 (mulai jam 5)\n5. Pilih A5 (mulai jam 8)\n\n‚úÖ **Solusi:** A1, A3, A5\n\n---\n\n## üêç Implementasi Python\n\n```python\ndef activity_selection(start, finish):\n    activities = sorted(zip(start, finish), key=lambda x: x[1])\n    result = []\n    last_finish_time = -1\n\n    for s, f in activities:\n        if s >= last_finish_time:\n            result.append((s, f))\n            last_finish_time = f\n\n    return result\n\n# Contoh penggunaan\nstart = [1, 3, 5, 3, 8]\nfinish = [4, 5, 7, 8, 9]\nselected = activity_selection(start, finish)\nprint(\"Aktivitas yang dipilih:\", selected)\n","md","",[22,23,24,33,40,63,68,86,91,97,102,108,113,123,131,139,147,152,157,162,168,173,185,197,206,215,224,232,237,255,260,265,270,276,281,287,292,298,304,310,316,322,328,334,339,345,350,358,366,374,382,391,396,408,413,418,423,429,434,440,446,452,458,464,469,475,481,487,493,498,504,509,515,521,527,533],"code",{"__ignoreMap":20},[25,26,29],"span",{"class":27,"line":28},"line",1,[25,30,32],{"class":31},"sXvaJ","# üóìÔ∏è Apa itu Activity Selection Problem?\n",[25,34,36],{"class":27,"line":35},2,[25,37,39],{"emptyLinePlaceholder":38},true,"\n",[25,41,43,47,51,54,57,60],{"class":27,"line":42},3,[25,44,46],{"class":45},"s9_AW","**Activity Selection Problem**",[25,48,50],{"class":49},"suVJd"," adalah masalah optimisasi klasik dalam ilmu komputer. Tujuannya adalah untuk ",[25,52,53],{"class":45},"**memilih sebanyak mungkin aktivitas**",[25,55,56],{"class":49}," dari himpunan yang diberikan ",[25,58,59],{"class":45},"**tanpa ada yang saling tumpang tindih**",[25,61,62],{"class":49},", dengan setiap aktivitas memiliki waktu mulai dan selesai.\n",[25,64,66],{"class":27,"line":65},4,[25,67,39],{"emptyLinePlaceholder":38},[25,69,71,74,77,80,83],{"class":27,"line":70},5,[25,72,73],{"class":49},"üß† Masalah ini diselesaikan menggunakan pendekatan ",[25,75,76],{"class":45},"**greedy**",[25,78,79],{"class":49},", yang memilih aktivitas dengan ",[25,81,82],{"class":45},"**waktu selesai paling awal**",[25,84,85],{"class":49}," terlebih dahulu.\n",[25,87,89],{"class":27,"line":88},6,[25,90,39],{"emptyLinePlaceholder":38},[25,92,94],{"class":27,"line":93},7,[25,95,96],{"class":31},"---\n",[25,98,100],{"class":27,"line":99},8,[25,101,39],{"emptyLinePlaceholder":38},[25,103,105],{"class":27,"line":104},9,[25,106,107],{"class":31},"## üìå Aplikasi Nyata\n",[25,109,111],{"class":27,"line":110},10,[25,112,39],{"emptyLinePlaceholder":38},[25,114,116,120],{"class":27,"line":115},11,[25,117,119],{"class":118},"s1uPE","-",[25,121,122],{"class":49}," üìÖ Penjadwalan rapat atau kelas dalam satu ruangan\n",[25,124,126,128],{"class":27,"line":125},12,[25,127,119],{"class":118},[25,129,130],{"class":49}," üßë‚Äçüíº Manajemen tugas dalam satu waktu kerja\n",[25,132,134,136],{"class":27,"line":133},13,[25,135,119],{"class":118},[25,137,138],{"class":49}," üñ•Ô∏è Penjadwalan proses di CPU\n",[25,140,142,144],{"class":27,"line":141},14,[25,143,119],{"class":118},[25,145,146],{"class":49}," üåê Alokasi bandwidth di jaringan\n",[25,148,150],{"class":27,"line":149},15,[25,151,39],{"emptyLinePlaceholder":38},[25,153,155],{"class":27,"line":154},16,[25,156,96],{"class":31},[25,158,160],{"class":27,"line":159},17,[25,161,39],{"emptyLinePlaceholder":38},[25,163,165],{"class":27,"line":164},18,[25,166,167],{"class":31},"## üîß Cara Kerja Algoritma Greedy\n",[25,169,171],{"class":27,"line":170},19,[25,172,39],{"emptyLinePlaceholder":38},[25,174,176,179,182],{"class":27,"line":175},20,[25,177,178],{"class":118},"1.",[25,180,181],{"class":45}," **Urutkan aktivitas**",[25,183,184],{"class":49}," berdasarkan waktu selesai secara ascending.\n",[25,186,188,191,194],{"class":27,"line":187},21,[25,189,190],{"class":118},"2.",[25,192,193],{"class":45}," **Pilih aktivitas pertama**",[25,195,196],{"class":49}," (dengan waktu selesai paling awal).\n",[25,198,200,203],{"class":27,"line":199},22,[25,201,202],{"class":118},"3.",[25,204,205],{"class":49}," Tandai waktu selesai aktivitas ini sebagai batas terakhir.\n",[25,207,209,212],{"class":27,"line":208},23,[25,210,211],{"class":118},"4.",[25,213,214],{"class":49}," Untuk setiap aktivitas berikutnya:\n",[25,216,218,221],{"class":27,"line":217},24,[25,219,220],{"class":118},"   -",[25,222,223],{"class":49}," Jika waktu mulai ‚â• batas terakhir ‚Üí pilih aktivitas\n",[25,225,227,229],{"class":27,"line":226},25,[25,228,220],{"class":118},[25,230,231],{"class":49}," Perbarui batas terakhir menjadi waktu selesai aktivitas tersebut.\n",[25,233,235],{"class":27,"line":234},26,[25,236,39],{"emptyLinePlaceholder":38},[25,238,240,243,246,249,252],{"class":27,"line":239},27,[25,241,242],{"class":49},"üìà Algoritma ini ",[25,244,245],{"class":45},"**menjamin jumlah maksimal aktivitas**",[25,247,248],{"class":49}," yang dapat dipilih ",[25,250,251],{"class":45},"**tanpa konflik**",[25,253,254],{"class":49},".\n",[25,256,258],{"class":27,"line":257},28,[25,259,39],{"emptyLinePlaceholder":38},[25,261,263],{"class":27,"line":262},29,[25,264,96],{"class":31},[25,266,268],{"class":27,"line":267},30,[25,269,39],{"emptyLinePlaceholder":38},[25,271,273],{"class":27,"line":272},31,[25,274,275],{"class":31},"## üßÆ Contoh Permasalahan\n",[25,277,279],{"class":27,"line":278},32,[25,280,39],{"emptyLinePlaceholder":38},[25,282,284],{"class":27,"line":283},33,[25,285,286],{"class":31},"### Daftar Aktivitas\n",[25,288,290],{"class":27,"line":289},34,[25,291,39],{"emptyLinePlaceholder":38},[25,293,295],{"class":27,"line":294},35,[25,296,297],{"class":49},"| Aktivitas | Mulai | Selesai |\n",[25,299,301],{"class":27,"line":300},36,[25,302,303],{"class":49},"|-----------|--------|---------|\n",[25,305,307],{"class":27,"line":306},37,[25,308,309],{"class":49},"| A1        | 1      | 4       |\n",[25,311,313],{"class":27,"line":312},38,[25,314,315],{"class":49},"| A2        | 3      | 5       |\n",[25,317,319],{"class":27,"line":318},39,[25,320,321],{"class":49},"| A3        | 5      | 7       |\n",[25,323,325],{"class":27,"line":324},40,[25,326,327],{"class":49},"| A4        | 3      | 8       |\n",[25,329,331],{"class":27,"line":330},41,[25,332,333],{"class":49},"| A5        | 8      | 9       |\n",[25,335,337],{"class":27,"line":336},42,[25,338,39],{"emptyLinePlaceholder":38},[25,340,342],{"class":27,"line":341},43,[25,343,344],{"class":31},"### Langkah Solusi:\n",[25,346,348],{"class":27,"line":347},44,[25,349,39],{"emptyLinePlaceholder":38},[25,351,353,355],{"class":27,"line":352},45,[25,354,178],{"class":118},[25,356,357],{"class":49}," Urutkan: A1(4), A2(5), A3(7), A4(8), A5(9)\n",[25,359,361,363],{"class":27,"line":360},46,[25,362,190],{"class":118},[25,364,365],{"class":49}," Pilih A1 (selesai jam 4)\n",[25,367,369,371],{"class":27,"line":368},47,[25,370,202],{"class":118},[25,372,373],{"class":49}," Lewati A2 & A4 (karena mulai \u003C 4)\n",[25,375,377,379],{"class":27,"line":376},48,[25,378,211],{"class":118},[25,380,381],{"class":49}," Pilih A3 (mulai jam 5)\n",[25,383,385,388],{"class":27,"line":384},49,[25,386,387],{"class":118},"5.",[25,389,390],{"class":49}," Pilih A5 (mulai jam 8)\n",[25,392,394],{"class":27,"line":393},50,[25,395,39],{"emptyLinePlaceholder":38},[25,397,399,402,405],{"class":27,"line":398},51,[25,400,401],{"class":49},"‚úÖ ",[25,403,404],{"class":45},"**Solusi:**",[25,406,407],{"class":49}," A1, A3, A5\n",[25,409,411],{"class":27,"line":410},52,[25,412,39],{"emptyLinePlaceholder":38},[25,414,416],{"class":27,"line":415},53,[25,417,96],{"class":31},[25,419,421],{"class":27,"line":420},54,[25,422,39],{"emptyLinePlaceholder":38},[25,424,426],{"class":27,"line":425},55,[25,427,428],{"class":31},"## üêç Implementasi Python\n",[25,430,432],{"class":27,"line":431},56,[25,433,39],{"emptyLinePlaceholder":38},[25,435,437],{"class":27,"line":436},57,[25,438,439],{"class":49},"```python\n",[25,441,443],{"class":27,"line":442},58,[25,444,445],{"class":49},"def activity_selection(start, finish):\n",[25,447,449],{"class":27,"line":448},59,[25,450,451],{"class":49},"    activities = sorted(zip(start, finish), key=lambda x: x[1])\n",[25,453,455],{"class":27,"line":454},60,[25,456,457],{"class":49},"    result = []\n",[25,459,461],{"class":27,"line":460},61,[25,462,463],{"class":49},"    last_finish_time = -1\n",[25,465,467],{"class":27,"line":466},62,[25,468,39],{"emptyLinePlaceholder":38},[25,470,472],{"class":27,"line":471},63,[25,473,474],{"class":49},"    for s, f in activities:\n",[25,476,478],{"class":27,"line":477},64,[25,479,480],{"class":49},"        if s >= last_finish_time:\n",[25,482,484],{"class":27,"line":483},65,[25,485,486],{"class":49},"            result.append((s, f))\n",[25,488,490],{"class":27,"line":489},66,[25,491,492],{"class":49},"            last_finish_time = f\n",[25,494,496],{"class":27,"line":495},67,[25,497,39],{"emptyLinePlaceholder":38},[25,499,501],{"class":27,"line":500},68,[25,502,503],{"class":49},"    return result\n",[25,505,507],{"class":27,"line":506},69,[25,508,39],{"emptyLinePlaceholder":38},[25,510,512],{"class":27,"line":511},70,[25,513,514],{"class":49},"# Contoh penggunaan\n",[25,516,518],{"class":27,"line":517},71,[25,519,520],{"class":49},"start = [1, 3, 5, 3, 8]\n",[25,522,524],{"class":27,"line":523},72,[25,525,526],{"class":49},"finish = [4, 5, 7, 8, 9]\n",[25,528,530],{"class":27,"line":529},73,[25,531,532],{"class":49},"selected = activity_selection(start, finish)\n",[25,534,536],{"class":27,"line":535},74,[25,537,538],{"class":49},"print(\"Aktivitas yang dipilih:\", selected)\n",[540,541,543],"h2",{"id":542},"Ô∏è-implementasi-javascript","üñ•Ô∏è Implementasi JavaScript",[15,545,547],{"className":17,"code":546,"language":19,"meta":20,"style":20},"function activitySelection(start, finish) {\n    const activities = start.map((s, i) => ({ start: s, finish: finish[i] }));\n    activities.sort((a, b) => a.finish - b.finish);\n\n    const result = [];\n    let lastFinish = -1;\n\n    for (let act of activities) {\n        if (act.start >= lastFinish) {\n            result.push(act);\n            lastFinish = act.finish;\n        }\n    }\n\n    return result;\n}\n\n// Contoh penggunaan\nconst start = [1, 3, 5, 3, 8];\nconst finish = [4, 5, 7, 8, 9];\nconsole.log(\"Aktivitas yang dipilih:\", activitySelection(start, finish));\n",[22,548,549,554,566,571,575,580,585,589,594,599,604,609,614,619,623,628,633,637,642,647,652],{"__ignoreMap":20},[25,550,551],{"class":27,"line":28},[25,552,553],{"class":49},"function activitySelection(start, finish) {\n",[25,555,556,559,563],{"class":27,"line":35},[25,557,558],{"class":49},"    const activities = start.map((s, i) => ({ start: s, finish: finish[",[25,560,562],{"class":561},"s8Wv-","i",[25,564,565],{"class":49},"] }));\n",[25,567,568],{"class":27,"line":42},[25,569,570],{"class":49},"    activities.sort((a, b) => a.finish - b.finish);\n",[25,572,573],{"class":27,"line":65},[25,574,39],{"emptyLinePlaceholder":38},[25,576,577],{"class":27,"line":70},[25,578,579],{"class":49},"    const result = [];\n",[25,581,582],{"class":27,"line":88},[25,583,584],{"class":49},"    let lastFinish = -1;\n",[25,586,587],{"class":27,"line":93},[25,588,39],{"emptyLinePlaceholder":38},[25,590,591],{"class":27,"line":99},[25,592,593],{"class":49},"    for (let act of activities) {\n",[25,595,596],{"class":27,"line":104},[25,597,598],{"class":49},"        if (act.start >= lastFinish) {\n",[25,600,601],{"class":27,"line":110},[25,602,603],{"class":49},"            result.push(act);\n",[25,605,606],{"class":27,"line":115},[25,607,608],{"class":49},"            lastFinish = act.finish;\n",[25,610,611],{"class":27,"line":125},[25,612,613],{"class":49},"        }\n",[25,615,616],{"class":27,"line":133},[25,617,618],{"class":49},"    }\n",[25,620,621],{"class":27,"line":141},[25,622,39],{"emptyLinePlaceholder":38},[25,624,625],{"class":27,"line":149},[25,626,627],{"class":49},"    return result;\n",[25,629,630],{"class":27,"line":154},[25,631,632],{"class":49},"}\n",[25,634,635],{"class":27,"line":159},[25,636,39],{"emptyLinePlaceholder":38},[25,638,639],{"class":27,"line":164},[25,640,641],{"class":49},"// Contoh penggunaan\n",[25,643,644],{"class":27,"line":170},[25,645,646],{"class":49},"const start = [1, 3, 5, 3, 8];\n",[25,648,649],{"class":27,"line":175},[25,650,651],{"class":49},"const finish = [4, 5, 7, 8, 9];\n",[25,653,654],{"class":27,"line":187},[25,655,656],{"class":49},"console.log(\"Aktivitas yang dipilih:\", activitySelection(start, finish));\n",[540,658,660],{"id":659},"Ô∏è-kompleksitas-optimasi","‚è±Ô∏è Kompleksitas & Optimasi",[662,663,665,666],"h3",{"id":664},"waktu-on-log-n","‚è≥ Waktu: ",[22,667,668],{},"O(n log n)",[670,671,672],"ul",{},[673,674,675],"li",{},"Karena proses pengurutan berdasarkan waktu selesai",[662,677,679,680],{"id":678},"ruang-on","üíæ Ruang: ",[22,681,682],{},"O(n)",[670,684,685],{},[673,686,687],{},"Untuk menyimpan aktivitas yang diurutkan dan hasil",[662,689,691],{"id":690},"optimasi","‚ö° Optimasi:",[670,693,694,699,702],{},[673,695,696,697],{},"Pre-sorting jika data sudah urut ‚Üí ",[22,698,682],{},[673,700,701],{},"In-place sorting ‚Üí hemat memori",[673,703,704],{},"Penggunaan struktur data efisien untuk jumlah besar aktivitas",[540,706,708],{"id":707},"kelebihan","‚úÖ Kelebihan",[670,710,711,718,724],{},[673,712,713,714],{},"üß† ",[715,716,717],"strong",{},"Sederhana & intuitif",[673,719,720,721],{},"üöÄ ",[715,722,723],{},"Cepat & efisien",[673,725,726],{},"üìö Cocok untuk pembelajaran algoritma greedy",[540,728,730],{"id":729},"kekurangan","‚ùå Kekurangan",[670,732,733,739,742],{},[673,734,735,736],{},"Tidak mendukung ",[715,737,738],{},"aktivitas yang overlap sebagian",[673,740,741],{},"Tidak optimal jika kriteria bukan waktu selesai",[673,743,744,745],{},"Memerlukan ",[715,746,747],{},"pengurutan awal",[540,749,751],{"id":750},"kesimpulan","üéØ Kesimpulan",[753,754,755,758,759,762,763,766,767,770],"p",{},[715,756,757],{},"Activity Selection Problem"," adalah contoh klasik dari algoritma ",[715,760,761],{},"greedy"," yang bekerja sangat baik pada masalah ",[715,764,765],{},"penjadwalan",". Dengan memilih aktivitas berdasarkan waktu selesai paling cepat, kita dapat menjadwalkan aktivitas sebanyak mungkin ",[715,768,769],{},"tanpa konflik",".",[772,773,774],"blockquote",{},[753,775,776,777],{},"üîé ",[778,779,780],"em",{},"Greedy works when local optimum leads to global optimum‚ÄîActivity Selection is a perfect case for that!",[782,783,784],"style",{},"html pre.shiki code .sXvaJ, html code.shiki .sXvaJ{--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;--shiki-default:#79B8FF;--shiki-default-font-weight:bold;--shiki-light:#005CC5;--shiki-light-font-weight:bold}html pre.shiki code .s9_AW, html code.shiki .s9_AW{--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;--shiki-default:#E1E4E8;--shiki-default-font-weight:bold;--shiki-light:#24292E;--shiki-light-font-weight:bold}html pre.shiki code .suVJd, html code.shiki .suVJd{--shiki-dark:#E1E4E8;--shiki-default:#E1E4E8;--shiki-light:#24292E}html pre.shiki code .s1uPE, html code.shiki .s1uPE{--shiki-dark:#FFAB70;--shiki-default:#FFAB70;--shiki-light:#E36209}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html pre.shiki code .s8Wv-, html code.shiki .s8Wv-{--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;--shiki-default:#DBEDFF;--shiki-default-text-decoration:underline;--shiki-light:#032F62;--shiki-light-text-decoration:underline}",{"title":20,"searchDepth":35,"depth":35,"links":786},[787,788,795,796,797],{"id":542,"depth":35,"text":543},{"id":659,"depth":35,"text":660,"children":789},[790,792,794],{"id":664,"depth":42,"text":791},"‚è≥ Waktu: O(n log n)",{"id":678,"depth":42,"text":793},"üíæ Ruang: O(n)",{"id":690,"depth":42,"text":691},{"id":707,"depth":35,"text":708},{"id":729,"depth":35,"text":730},{"id":750,"depth":35,"text":751},null,"Pelajari bagaimana memilih aktivitas maksimum yang tidak saling tumpang tindih menggunakan pendekatan greedy.",{"script":801},[802],{"type":803,"key":804,"data-nuxt-schema-org":38,"nodes":805},"application/ld+json","schema-org-graph",[806],{"_resolver":807},"webPage","/articles/10.jpeg",{},{"props":811},{},"/en/articles/activity-promblem-selection",{"_resolver":807},{"title":5,"description":799},{"loc":812,"videos":816,"images":817,"lastmod":818},[],[],"2025-06-14T00:00:00.000Z","en/articles/activity-promblem-selection",[],"naqZrmlcJGAJIonnJ3p1WDem5OSfX8g8ueQq4SxI8Yo",1750352580039]